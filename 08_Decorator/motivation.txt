- want to augment an object with additional functionality
- do not want to rewrite or alter existing code (Open Closed Principle)
- want to keep new functionality separate (Single Responsability Principle)
- need to be able to interact with existing structures
- two options:
 - inherit from required object if possible; some objects are sealed
 - build a decorator, which simply references the decorated objects and adds behavior on top of the behavior of that objects

 